# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import interface_pb2 as interface__pb2


class LiveQStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateRoom = channel.unary_unary(
        '/liveq.LiveQ/CreateRoom',
        request_serializer=interface__pb2.CreateRequest.SerializeToString,
        response_deserializer=interface__pb2.CreateReply.FromString,
        )
    self.JoinRoom = channel.unary_unary(
        '/liveq.LiveQ/JoinRoom',
        request_serializer=interface__pb2.JoinRequest.SerializeToString,
        response_deserializer=interface__pb2.JoinReply.FromString,
        )
    self.UpdateQueue = channel.unary_stream(
        '/liveq.LiveQ/UpdateQueue',
        request_serializer=interface__pb2.QueueRequest.SerializeToString,
        response_deserializer=interface__pb2.QueueReply.FromString,
        )
    self.AddSong = channel.unary_unary(
        '/liveq.LiveQ/AddSong',
        request_serializer=interface__pb2.SongRequest.SerializeToString,
        response_deserializer=interface__pb2.SongReply.FromString,
        )
    self.DeleteSong = channel.unary_unary(
        '/liveq.LiveQ/DeleteSong',
        request_serializer=interface__pb2.SongRequest.SerializeToString,
        response_deserializer=interface__pb2.SongReply.FromString,
        )


class LiveQServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateRoom(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def JoinRoom(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateQueue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddSong(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSong(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LiveQServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateRoom': grpc.unary_unary_rpc_method_handler(
          servicer.CreateRoom,
          request_deserializer=interface__pb2.CreateRequest.FromString,
          response_serializer=interface__pb2.CreateReply.SerializeToString,
      ),
      'JoinRoom': grpc.unary_unary_rpc_method_handler(
          servicer.JoinRoom,
          request_deserializer=interface__pb2.JoinRequest.FromString,
          response_serializer=interface__pb2.JoinReply.SerializeToString,
      ),
      'UpdateQueue': grpc.unary_stream_rpc_method_handler(
          servicer.UpdateQueue,
          request_deserializer=interface__pb2.QueueRequest.FromString,
          response_serializer=interface__pb2.QueueReply.SerializeToString,
      ),
      'AddSong': grpc.unary_unary_rpc_method_handler(
          servicer.AddSong,
          request_deserializer=interface__pb2.SongRequest.FromString,
          response_serializer=interface__pb2.SongReply.SerializeToString,
      ),
      'DeleteSong': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSong,
          request_deserializer=interface__pb2.SongRequest.FromString,
          response_serializer=interface__pb2.SongReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'liveq.LiveQ', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
